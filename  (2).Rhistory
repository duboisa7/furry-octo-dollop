install.packages(ggplot2, reticulate, tidyverse, pdftools, lubridate, XML, FactoMineR, flatxml, methods, poppler, pdftohtml, magick)
install.packages(c("ggplot2", "reticulate", "tidyverse", "pdftools", "lubridate", "XML", "flatxml", "magick"))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lubridate)
library(reticulate)
library(pdftools)
library(magick)
system(bash -c cd ~/grobid, show.output.on.console = TRUE, minimized = FALSE, wait = TRUE)
system(bash -c "cd ~/grobid", show.output.on.console = TRUE, minimized = FALSE, wait = TRUE)
library(tidyverse)
library(lubridate)
library(reticulate)
library(pdftools)
library(magick)
library(sys)
#navigate to grobid folder in WSL
switchdir1 <- cmd ("cd ~/grobid")
library(sys)
#navigate to grobid folder in WSL
switchdir1 <- cmd("cd ~/grobid")
#navigate to grobid folder in WSL
switchdir1 <- exec_wait("cd ~/grobid")
system("wsl", args = "cd ~/grobid", wait = TRUE, invisible = FALSE)
system("wsl", "cd ~/grobid", wait = TRUE, invisible = FALSE)
system("wsl", "cd ~/grobid", wait = TRUE, invisible = FALSE, intern = TRUE)
system("wsl", "cd ~/grobid", wait = TRUE, invisible = FALSE, intern = TRUE, ignore.stdout = FALSE)
system("wsl", "cd ~/grobid", wait = TRUE, invisible = FALSE, intern = TRUE, ignore.stdout = FALSE, ignore.stderr = FALSE)
system("wsl", "cd ~\grobid", wait = TRUE, invisible = FALSE, intern = TRUE, ignore.stdout = FALSE, ignore.stderr = FALSE)
system("wsl", character("cd ~\grobid"), wait = TRUE, invisible = FALSE, intern = TRUE, ignore.stdout = FALSE, ignore.stderr = FALSE)
system("wsl", character("cd ~/grobid/"), wait = TRUE, invisible = FALSE, intern = TRUE, ignore.stdout = FALSE, ignore.stderr = FALSE)
system("wsl", character("cd ~/grobid"), wait = TRUE, invisible = FALSE, intern = TRUE, ignore.stdout = FALSE, ignore.stderr = FALSE)
system("wsl", "cd ~/grobid/", wait = TRUE, invisible = FALSE, intern = TRUE, ignore.stdout = FALSE, ignore.stderr = FALSE)
system("wsl", "cd /home/msufsl/grobid/", wait = TRUE, invisible = FALSE, intern = TRUE, ignore.stdout = FALSE, ignore.stderr = FALSE)
#navigate to grobid folder in WSL
switchdir1 <- exec_wait("wsl", "cd /home/msufsl/grobid")
remove(switchdir1)
library(xml2)
library(flatxml)
install.packages("xmlconvert", dependences = TRUE)
library(tidyverse)
library(lubridate)
library(reticulate)
library(pdftools)
library(magick)
library(sys)
library(xml2)
library(flatxml)
library(xmlconvert)
## Copy PDFs from project folder to WSL
``` {r copy PDFs to virtual environment}
library(tidyverse)
library(lubridate)
library(reticulate)
library(pdftools)
library(magick)
library(sys)
library(xml2)
library(flatxml)
library(xmlconvert)
p3test <- read_xml("/XMLs/pdf3.tei.xml")
p3test <- read_xml("/Database/XMLs/pdf3.tei.xml")
p3test <- read_xml("XMLs/pdf3.tei.xml")
View(p3test)
View(p3test)
p3test2 <- xml_to_df("XMLs/pdf3.tei.xml")
p3test2 <- xml_to_df("XMLs/pdf3.tei.xml", records.tags = "Author", fields = tags)
p3test2 <- xml_to_df("XMLs/pdf3.tei.xml", records.tags = "Author", fields = "tags)
p3test2 <- xml_to_df("XMLs/pdf3.tei.xml", records.tags = "Author", fields = "tags)
p3test2 <- xml_to_df("XMLs/pdf3.tei.xml", records.tags = "Author", fields = "tags")
p3test2 <- xml_to_df("XMLs/pdf3.tei.xml", records.tags = "author", fields = "tags")
p3test2 <- xml_to_df(p3test, records.tags = "author", fields = "tags")
p3test.df <- system.file("XMLs/pdf3.tei.xml", package = "xmlconvert")
p3df <- xml_to_df(p3test.df, records.tags = "author", fields = "tags")
p3test.df <- system.file("XMLs/pdf3.tei.xml", package = "xmlconvert")
p3df <- xml_to_df(text = p3test.df, records.tags = "author", fields = "tags")
p3test.df <- system.file("XMLs/pdf3.tei.xml", package = "xmlconvert")
p3df <- xml_to_df(text = p3test.df, records.tags = "author", fields = "tags")
p3test.df <- xml_to_df(text = "XMLs/pdf3.tei.xml", records.tags = "author", fields = "tags")
p3test.df <- xml_to_df(text = p3test, records.tags = "author", fields = "tags")
p3test2 <- system.file("XMLs/pdf3.tei.xml", package="xmlconvert")
p3test.df <- xml_to_df(text = p3test2, records.tags = "author", fields = "tags")
p3test.df <- xml_to_df(text = "C:/Users/mayhe/Documents/Database/XMLs/pdf3.tei.xml", records.tags = "author", fields = "tags")
library(stringr)
p3test <- read_xml("XMLs/pdf3.tei.xml") %>%
xml_root()
remove(p3test.df)
remove(p3test2)
p3test <- read_xml("XMLs/pdf3.tei.xml") %>%
xml_children()
xml_children(p3test)
auths<- xml_child(search = 1, "author")
authors<- xml_find_all(author)
authors<- xml_find_all("author")
authors<- xml_find_all(p3test, "author")
View(authors)
authors<- xml_path(xml_find_all(p3test, "author"))
authors<- xml_path(xml_find_all(p3test, ".//author"))
